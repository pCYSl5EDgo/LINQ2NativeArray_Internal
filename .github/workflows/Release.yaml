name: CreateRelease

on:
  push:
    branches:
    - master

jobs:
  publishReleaseJob:
    runs-on: ubuntu-latest
    #needs: buildReleaseJob
    steps:
    - run: mkdir -p artifact
    - run: |
        curl -sS https://api.github.com/repos/pCYSl5EDgo/UniNativeLinq-Core/releases | jq ".[0] | .tag_name" |  awk '{print substr($0, 1, length($0)-2)}'
        curl -sS https://api.github.com/repos/pCYSl5EDgo/UniNativeLinq-Core/releases | jq ".[0] | .tag_name" |  awk '{split(substr($0, 1, length($0)-2),versions,".");print versions[1] "." versions[2] "." (versions[3]+1)}' > next_version
        cat next_version

    #- uses: actions/download-artifact@master
      #with:
        #name: bytes
        #path: artifact
    #- run: |
     #   NEXTVERSION=$(cat next_version)
      #  printf "{\"tag_name\":\"%s\",\"target_commitish\":\"master\",\"name\":\"Release - %s\"}" $NEXT_VERSION $NEXT_VERSION > json
       # cat json
        #curl -sS -X POST -H 'content-type:application/json' --data-urlencode @"json" https://api.github.com/repos/pCYSl5EDgo/UniNativeLinq-Core/releases > response
        #cat response
        #cat response | jq '.upload_url' > upload_url
    #- run: cat upload_url
        #curl -sS -X POST -H 'content-type:application/json' --data-urlencode $JSON $(cat upload_url)
